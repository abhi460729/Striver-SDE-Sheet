 static int eggDropHelper(int n, int k, int dp[][]) 
	{
	    // Your code here
	    if(k==0 || k==1){
	        return k;
	    }
	    
	    if(n==1)
	        return k;
	        
	    if(dp[n][k]!=-1){
	        return dp[n][k];
	    }
	    
	    int min=Integer.MAX_VALUE;
	    for(int f=1;f<=k;f++){
            //Break
            int breakegg=eggDrop(n-1,f-1);
            //Not Break
            int notbreakegg=eggDrop(n,k-f);
            int result=1+Math.max(breakegg,notbreakegg);
            min=Math.min(min,result);
        }
        return dp[n][k]=min;
	}
	
    static int eggDrop(int n, int k) 
	{
	    // Your code here
	    int dp[][]= new int[n+1][k+1];
	    for(int i=0;i<=n;i++){
	        for(int j=0;j<=k;j++){
	            dp[i][j]=-1;
	        }
	    }
        return eggDropHelper(n,k,dp);
	}