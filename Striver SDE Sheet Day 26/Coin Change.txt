class Solution {
    public int coinChange(int[] coins, int amount) {
        int n=coins.length;
        int m=amount;
        int dp[][]= new int[n+1][m+1];
        
        for(int j=0;j<=m;j++){
            dp[0][j]=Integer.MAX_VALUE-1;
        }
        
        for(int i=1;i<=n;i++){
            dp[i][0]=0;
        }
        
        for(int j=1;j<=m;j++){
            if(j%coins[0]==0){
                dp[1][j]=j/coins[0];
            }
            else{
                dp[1][j]=Integer.MAX_VALUE-1;
            }
        }
        
        for(int i=1;i<=n;i++){
            for(int j=1;j<=m;j++){
                if(coins[i-1]<=j){
                    dp[i][j]=Math.min(1+dp[i][j-coins[i-1]],dp[i-1][j]);
                }
                else{
                    dp[i][j]=dp[i-1][j];
                }
            }
        }
        
        return dp[n][m]==Integer.MAX_VALUE-1?-1:dp[n][m];
    }
}