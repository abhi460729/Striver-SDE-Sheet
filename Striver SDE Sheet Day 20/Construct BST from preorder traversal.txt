/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode bstFromPreorder(int[] preorder) {
        int i[]= new int[1];
        i[0]=0;
        return bstFromPreorder(preorder,Integer.MAX_VALUE,i);
    }
    public TreeNode bstFromPreorder(int[] preorder, int bound, int i[]){
        if(i[0]==preorder.length || preorder[i[0]]>bound){
            return null;
        }
        TreeNode root= new TreeNode(preorder[i[0]++]);
        root.left=bstFromPreorder(preorder,root.val,i);
        root.right=bstFromPreorder(preorder,bound,i);
        return root;
    }
}
//TC=O(N)
//SC=O(N)