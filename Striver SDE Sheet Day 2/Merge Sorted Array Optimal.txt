class Solution {
    public static int nextGap(int gap){
        if(gap<=1)
            return 0;
        return (gap/2)+(gap%2);
    }
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int i,j,gap=m+n;
        for(gap=nextGap(gap);gap>0;gap=nextGap(gap)){
            for(i=0;i+gap<m;i++){
                if(nums1[i]>nums1[i+gap]){
                    int temp=nums1[i];
                    nums1[i]=nums1[i+gap];
                    nums1[i+gap]=temp;
                }
            }
            
            for(j=gap>m?gap-m:0;i<m && j<n;i++,j++){
                if(nums1[i]>nums2[j]){
                    int temp=nums1[i];
                    nums1[i]=nums2[j];
                    nums2[j]=temp;
                }
            }
            
            if(j<n){
                for(j=0;j+gap<n;j++){
                    if(nums2[j]>nums2[j+gap]){
                        int temp=nums2[j];
                        nums2[j]=nums2[j+gap];
                        nums2[j+gap]=temp;
                    }
                }
            }
        }
        for(int k=0;k<n;k++){
            nums1[k+m]=nums2[k];
        }
    }
}