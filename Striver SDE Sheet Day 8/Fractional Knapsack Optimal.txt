class myComparator implements Comparator<Item>
{
    @Override
    public int compare(Item i1, Item i2){
        double item1=(double)i1.value/(double)i1.weight;
        double item2=(double)i2.value/(double)i2.weight;
        
        if(item1<item2){
            return 1;
        }
        else if(item1>item2){
            return -1; 
        }
        else{
            return 0;
        }
    }
}
class Solution
{
    //Function to get the maximum total value in the knapsack.
    double fractionalKnapsack(int W, Item arr[], int n) 
    {
        // Your code here
        Arrays.sort(arr, new myComparator());
        int currentWeight=0; 
        double finalProfit=0.0;
        for(int i=0;i<n;i++){
            if(currentWeight+arr[i].weight<=W){
                currentWeight+=arr[i].weight;
                finalProfit+=arr[i].value;
            }
            else{
                int remain=W-currentWeight;
                finalProfit+=((double)arr[i].value/(double)arr[i].weight)*(double)remain;
                break;
            }
        }
        return finalProfit;
    }
}
TC=O(NlogN)+O(N)