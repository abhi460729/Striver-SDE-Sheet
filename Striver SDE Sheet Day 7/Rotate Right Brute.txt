/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        int length=0;
        ListNode temp1=head;
        while(temp1!=null){
            length++;
            temp1=temp1.next;
        }
        if(length>0){
            k=k%length;
        }
        if(head==null || head.next==null || k==0){
            return head;
        }
        for(int i=0;i<k;i++){
            ListNode temp=head;
            while(temp.next.next!=null){
                temp=temp.next;
            }
            ListNode end=temp.next;
            temp.next=null;
            end.next=head;
            head=end;
        }
        return head;
    }
}
//TC=O(K*N)
//SC=O(1)