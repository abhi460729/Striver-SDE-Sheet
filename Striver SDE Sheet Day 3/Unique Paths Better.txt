class Solution {
     public int uniquePathsHelper(int i, int j, int m, int n, int dp[][]){
         if(i==m-1 || j==n-1){
             return 1;
         }
         if(i>m || j>n){
             return 0;
         }
         if(dp[i][j]!=-1){
             return dp[i][j];
         }
         else{
             return dp[i][j]=uniquePathsHelper(i+1,j,m,n,dp)+uniquePathsHelper(i,j+1,m,n,dp);
         }
     }
    public int uniquePaths(int m, int n) {
         int dp[][] = new int[m][n];
         for(int i=0;i<m;i++){
             for(int j=0;j<n;j++){
                 dp[i][j]=-1;
             }
         }
         int i=0, j=0;
         int result=uniquePathsHelper(i,j,m,n,dp);
         return result;
    }
}
TC=O(N*M)
SC=O(N*M)