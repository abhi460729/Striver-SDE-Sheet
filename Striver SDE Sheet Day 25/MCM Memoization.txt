static int matrixMultiplicationHelper(int N, int arr[], int i, int j, int dp[][]){
        if(i>=j){
            return 0;
        }
        if(dp[i][j]!=-1){
            return dp[i][j];
        }
        int min=Integer.MAX_VALUE;
        for(int k=i;k<j;k++){
            int temp=matrixMultiplicationHelper(N,arr,i,k,dp)+matrixMultiplicationHelper(N,arr,k+1,j,dp)+arr[i-1]*arr[k]*arr[j];
            if(temp<min){
                min=temp;
            }
        }
        return dp[i][j]=min;
    }
    static int matrixMultiplication(int N, int arr[])
    {
        // code here
        int dp[][]= new int[N][N];
        for(int i=0;i<N;i++){
            for(int j=0;j<N;j++){
                dp[i][j]=-1;
            }
        }
        return matrixMultiplicationHelper(N,arr,1,N-1,dp);
    }
//TC=O(N*2)
//SC=O(N*2)