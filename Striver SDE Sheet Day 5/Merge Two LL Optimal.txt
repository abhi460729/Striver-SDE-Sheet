
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        if(list1==null && list2==null)
            return null;
        if(list1==null)
            return list2;
        if(list2==null)
            return list1;
        ListNode fH=null, fT=null;
        ListNode head1=list1;
        ListNode head2=list2;
        while(head1!=null && head2!=null){
            if(head1.val<head2.val){
                if(fH==null){
                    fH=head1;
                    fT=head1;
                    head1=head1.next;
                }
                else{
                    fT.next=head1;
                    head1=head1.next;
                    fT=fT.next;
                }
            }
            else{
                if(fH==null){
                    fH=head2;
                    fT=head2;
                    head2=head2.next;
                }
                else{
                    fT.next=head2;
                    head2=head2.next;
                    fT=fT.next;
                }
            }
        }
        
        if(head1!=null){
            fT.next=head1;
        }
        
        if(head2!=null){
            fT.next=head2;
        }
        
        return fH;
        
    }
}
TC=O(N)
SC=O(1)